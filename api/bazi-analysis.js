import crystals from "../../public/element_crystal_mapping.json";

export default async function handler(req, res) {
  const {
    yearPillar,
    monthPillar,
    dayPillar,
    hourPillar,
    gender,
    language,
    percentages
  } = req.body;

  if (!yearPillar || !monthPillar || !dayPillar || !hourPillar || !gender || !percentages) {
    return res.status(400).json({ message: "‚ùó Missing required fields." });
  }

  // 1Ô∏è‚É£ ÊâæÂà∞ÊúÄÁº∫ÂÖÉÁ¥†
  const entries = Object.entries(percentages);
  const sorted = entries.sort((a, b) => a[1] - b[1]);
  const lackingElement = sorted[0][0];

  // 2Ô∏è‚É£ ÊãºÊé•Ê∞¥Êô∂Êé®Ëçê
  const recommendedCrystals = crystals[lackingElement]?.crystals || [];
  const crystalText = recommendedCrystals
    .slice(0, 5)
    .map(c => `- ${c.name}: ${c.description}\n  [View Product](${c.link})`)
    .join("\\n");

  // 3Ô∏è‚É£ ÊãºÊé•Prompt
  const prompt = `
You are a professional Feng Shui Master and Healing Therapist.

Use the user's Four Pillars and Five Element Percentages to analyze personality and provide lifestyle suggestions.

IMPORTANT:
You MUST use the provided percentages EXACTLY as given, without modification or reinterpretation.
You do NOT need to invent any crystal recommendations (they are already provided).
Just clearly present the provided recommendations in the output.

If the user selected Chinese, reply in Chinese. If English, reply in English.

FORMAT:

üåü Your Personalized BaZi Analysis

ü™∂ Feng Shui Master‚Äôs BaZi Insights

[2-3 paragraphs describing the Four Pillars and Five Element Percentages.]

‚∏ª

üåø Five Elements Balancing Suggestions

[1-2 paragraphs with lifestyle suggestions for balancing elements.]

‚∏ª

üíé Elemental Spirit‚Äôs Crystal Recommendation

[Include the EXACT crystal recommendations provided below.]

‚∏ª

üåà Final Encouragement

[Warm encouragement and affirmation.]

**User's BaZi Info:**
Year Pillar: ${yearPillar}
Month Pillar: ${monthPillar}
Day Pillar: ${dayPillar}
Hour Pillar: ${hourPillar}
Gender: ${gender}
Language: ${language}

**Five Element Percentages Provided:**
${entries.map(e => `${e[0]}: ${e[1]}%`).join("\\n")}

**Crystal Recommendations for ${lackingElement}:**
${crystalText}
`.trim();

  try {
    const response = await fetch("https://api.openai.com/v1/chat/completions", {
      method: "POST",
      headers: {
        "Authorization": `Bearer ${process.env.OPENAI_API_KEY}`,
        "Content-Type": "application/json"
      },
      body: JSON.stringify({
        model: "gpt-4",
        messages: [
          {
            role: "system",
            content: "You are a warm, helpful assistant who writes clear, encouraging BaZi reports."
          },
          {
            role: "user",
            content: prompt
          }
        ],
        temperature: 0.7
      })
    });

    const json = await response.json();
    const message = json.choices?.[0]?.message?.content || "‚ú® Your analysis is ready.";

    res.status(200).json({ message });
  } catch (error) {
    console.error("BaZi Analysis error:", error);
    res.status(500).json({ message: "‚ö†Ô∏è Failed to generate BaZi analysis." });
  }
}
